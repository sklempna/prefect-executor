# Use postgres/example user/password credentials
version: "3.1"

services:
  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - 8080:8080
    profiles:
      - debug

  ### Pipeline Database
  # tracking-db:
  #   container_name: tracking-db
  #   image: postgres
  #   restart: always
  #   environment:
  #     POSTGRES_PASSWORD: example
  #     POSTGRES_USER: admin
  #     POSTGRES_DB: default
  #   volumes:
  #     - type: bind
  #       source: ./config/tracker_db_config
  #       target: /docker-entrypoint-initdb.d
  #   ports:
  #     - 5432:5432

  ### Prefect Database
  prefect-db:
    container_name: prefect-db
    image: postgres:15.2-alpine
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    expose:
      - 5432
    volumes:
      - db:/var/lib/postgresql/data
    #profiles: ["server"]

  ### MinIO for flow storage
  minio:
    container_name: minio
    image: minio/minio:latest
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    entrypoint: ["minio", "server", "--address", "0.0.0.0:9000", "--console-address", "0.0.0.0:9001", "/data"]
    volumes:
      - "minio:/data"
    ports:
      - 9000:9000
      - 9001:9001
    profiles: ["minio"]

  ### Prefect Server API and UI
  prefect-server:
    container_name: prefect-server
    image: prefecthq/prefect:2.13.4-python3.11
    restart: always
    volumes:
      - prefect:/root/.prefect
    entrypoint: ["/opt/prefect/entrypoint.sh", "prefect", "server", "start"]
    environment:
      - PREFECT_UI_URL=http://127.0.0.1:4200/api
      - PREFECT_API_URL=http://127.0.0.1:4200/api
      # If you want to access Prefect Server UI from anywhere other than the Docker host machine, you will need to change
      # PREFECT_UI_URL and PREFECT_API_URL to match the external hostname/IP of the host machine. For example:
      #- PREFECT_UI_URL=http://external-ip:4200/api
      #- PREFECT_API_URL=http://external-ip:4200/api
      - PREFECT_SERVER_API_HOST=0.0.0.0
      - PREFECT_API_DATABASE_CONNECTION_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@prefect-db:5432/${POSTGRES_DB}
      # Uncomment the following line if you want to use the 'S3 Bucket' storage block instead of the older 'S3' storage
      # - EXTRA_PIP_PACKAGES=prefect-aws
    ports:
      - 4200:4200
    depends_on:
      - prefect-db
    #profiles: ["server"]

  # ## Prefect Agent
  # agent:
  #   image: prefecthq/prefect:2.13.4-python3.11
  #   restart: always
  #   entrypoint:
  #     [
  #       "/opt/prefect/entrypoint.sh",
  #       "prefect",
  #       "agent",
  #       "start",
  #       "-q",
  #       "YOUR_WORK_QUEUE_NAME",
  #     ]
  #   environment:
  #     - PREFECT_API_URL=http://server:4200/api
  #       Use PREFECT_API_KEY if connecting the agent to Prefect Cloud
  #     - PREFECT_API_KEY=YOUR_API_KEY
  #profiles: ["agent"]

  
  prefect-executor:
    container_name: prefect-executor
    image: prefecthq/prefect:2.13.4-python3.11
    # stdin_open: true
    # tty: true
    command: /bin/bash -c "/root/Pipelines/executor/set-up-executor.sh"
    working_dir: "/root/Pipelines"
    volumes:
      - ".:/root/Pipelines"
    environment:
      - PREFECT_API_URL=http://prefect-server:4200/api
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
    #       Use PREFECT_API_KEY to use the CLI to interact with Prefect Cloud
    #     - PREFECT_API_KEY=YOUR_API_KEY
    depends_on:
      - prefect-server

  ### Prefect CLI
  # cli:
  #   image: prefecthq/prefect:2.13.4-python3.11
  #   stdin_open: true
  #   tty: true
  #   working_dir: "/root/flows"
  #   volumes:
  #     - ".:/root/flows"
  #   environment:
  #     - PREFECT_API_URL=http://server:4200/api
  #   #       Use PREFECT_API_KEY to use the CLI to interact with Prefect Cloud
  #   #     - PREFECT_API_KEY=YOUR_API_KEY
  # worker:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.worker
  #   stdin_open: true
  #   tty: true
  #   working_dir: "/root/flows"
  #   volumes:
  #     - ".:/root/flows"
  #   environment:
  #     - PREFECT_API_URL=http://server:4200/api
    #       Use PREFECT_API_KEY to use the CLI to interact with Prefect Cloud
    #     - PREFECT_API_KEY=YOUR_API_KEY

volumes:
  prefect:
  db:
  minio:
networks:
  default:
    name: prefect-network
